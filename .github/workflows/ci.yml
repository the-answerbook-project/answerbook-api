name: API CI

on:
  push:
    branches:
      - master
      - 'feature/*'
  pull_request:
    branches:
      - master

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libldap2-dev libsasl2-dev
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install

  type-check:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'
          cache: 'poetry'
      - name: Check types
        run: poetry run mypy .

  style-check:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'
          cache: 'poetry'
      - name: Check style
        run: poetry run ruff check --select I


  test:
    runs-on: ubuntu-latest
    needs: install-dependencies
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: usr
          POSTGRES_PASSWORD: pass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'
          cache: 'poetry'
      - name: Run tests with coverage
        run: poetry run pytest --junitxml=report.xml --cov=api/ --cov-report=xml --cov-report=term-missing tests/
        env:
          TEST_DB_SERVER_URL: postgresql://usr:pass@localhost
